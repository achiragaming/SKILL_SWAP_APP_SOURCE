name: Release Workflow

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build and package
        run: |
          npm run lint
          npm run format
          npm run build

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run build:win

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            dist/*.exe
            dist/latest.yml

  release:
    needs: build
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.get_version.outputs.tag }}
      preview: ${{ steps.get_preview.outputs.preview }}

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - id: get_version
        run: |
          version=$(node -p 'require("./package.json").version')
          echo "tag=$version" >> $GITHUB_OUTPUT

      - id: get_preview
        run: |
          preview=$(node -p 'require("./package.json").preview ? "true" : "false"')
          echo "preview=$preview" >> $GITHUB_OUTPUT

      - name: Debug Version Variables
        run: |
          echo "Version Tag: ${{ steps.get_version.outputs.tag }}"
          echo "Preview Status: ${{ steps.get_preview.outputs.preview }}"
          echo "Raw package.json content:"
          cat package.json

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.tag }}
          name: Release v${{ steps.get_version.outputs.tag }}
          draft: false
          prerelease: ${{ steps.get_preview.outputs.preview == 'true' }}
          files: artifacts/**/*
          token: ${{ secrets.GH_TOKEN }}
